import numpy as np
import NeuralNetwork as nn

def imageSplit(image, kernelShape):
    imageShape = list(image.shape)
    return np.moveaxis(np.array(np.split(np.moveaxis(np.array(np.split(image, imageShape[-1] / kernelShape[-1], axis = -1)), 0, -3), imageShape[-2] / kernelShape[-2], axis = -2)), 0, -4)


i = np.arange(5 * 16 * 12).reshape([5, 16, 12])
o = np.array([[[[[0, 1, 2], [12, 13, 14]], [[3, 4, 5], [15, 16, 17]], [[6, 7, 8], [18, 19, 20]], [[9, 10, 11], [21, 22, 23]]], [[[24, 25, 26], [36, 37, 38]], [[27, 28, 29], [39, 40, 41]], [[30, 31, 32], [42, 43, 44]], [[33, 34, 35], [45, 46, 47]]], [[[48, 49, 50], [60, 61, 62]], [[51, 52, 53], [63, 64, 65]], [[54, 55, 56], [66, 67, 68]], [[57, 58, 59], [69, 70, 71]]], [[[72, 73, 74], [84, 85, 86]], [[75, 76, 77], [87, 88, 89]], [[78, 79, 80], [90, 91, 92]], [[81, 82, 83], [93, 94, 95]]], [[[96, 97, 98], [108, 109, 110]], [[99, 100, 101], [111, 112, 113]], [[102, 103, 104], [114, 115, 116]], [[105, 106, 107], [117, 118, 119]]], [[[120, 121, 122], [132, 133, 134]], [[123, 124, 125], [135, 136, 137]], [[126, 127, 128], [138, 139, 140]], [[129, 130, 131], [141, 142, 143]]], [[[144, 145, 146], [156, 157, 158]], [[147, 148, 149], [159, 160, 161]], [[150, 151, 152], [162, 163, 164]], [[153, 154, 155], [165, 166, 167]]], [[[168, 169, 170], [180, 181, 182]], [[171, 172, 173], [183, 184, 185]], [[174, 175, 176], [186, 187, 188]], [[177, 178, 179], [189, 190, 191]]]], [[[[192, 193, 194], [204, 205, 206]], [[195, 196, 197], [207, 208, 209]], [[198, 199, 200], [210, 211, 212]], [[201, 202, 203], [213, 214, 215]]], [[[216, 217, 218], [228, 229, 230]], [[219, 220, 221], [231, 232, 233]], [[222, 223, 224], [234, 235, 236]], [[225, 226, 227], [237, 238, 239]]], [[[240, 241, 242], [252, 253, 254]], [[243, 244, 245], [255, 256, 257]], [[246, 247, 248], [258, 259, 260]], [[249, 250, 251], [261, 262, 263]]], [[[264, 265, 266], [276, 277, 278]], [[267, 268, 269], [279, 280, 281]], [[270, 271, 272], [282, 283, 284]], [[273, 274, 275], [285, 286, 287]]], [[[288, 289, 290], [300, 301, 302]], [[291, 292, 293], [303, 304, 305]], [[294, 295, 296], [306, 307, 308]], [[297, 298, 299], [309, 310, 311]]], [[[312, 313, 314], [324, 325, 326]], [[315, 316, 317], [327, 328, 329]], [[318, 319, 320], [330, 331, 332]], [[321, 322, 323], [333, 334, 335]]], [[[336, 337, 338], [348, 349, 350]], [[339, 340, 341], [351, 352, 353]], [[342, 343, 344], [354, 355, 356]], [[345, 346, 347], [357, 358, 359]]], [[[360, 361, 362], [372, 373, 374]], [[363, 364, 365], [375, 376, 377]], [[366, 367, 368], [378, 379, 380]], [[369, 370, 371], [381, 382, 383]]]], [[[[384, 385, 386], [396, 397, 398]], [[387, 388, 389], [399, 400, 401]], [[390, 391, 392], [402, 403, 404]], [[393, 394, 395], [405, 406, 407]]], [[[408, 409, 410], [420, 421, 422]], [[411, 412, 413], [423, 424, 425]], [[414, 415, 416], [426, 427, 428]], [[417, 418, 419], [429, 430, 431]]], [[[432, 433, 434], [444, 445, 446]], [[435, 436, 437], [447, 448, 449]], [[438, 439, 440], [450, 451, 452]], [[441, 442, 443], [453, 454, 455]]], [[[456, 457, 458], [468, 469, 470]], [[459, 460, 461], [471, 472, 473]], [[462, 463, 464], [474, 475, 476]], [[465, 466, 467], [477, 478, 479]]], [[[480, 481, 482], [492, 493, 494]], [[483, 484, 485], [495, 496, 497]], [[486, 487, 488], [498, 499, 500]], [[489, 490, 491], [501, 502, 503]]], [[[504, 505, 506], [516, 517, 518]], [[507, 508, 509], [519, 520, 521]], [[510, 511, 512], [522, 523, 524]], [[513, 514, 515], [525, 526, 527]]], [[[528, 529, 530], [540, 541, 542]], [[531, 532, 533], [543, 544, 545]], [[534, 535, 536], [546, 547, 548]], [[537, 538, 539], [549, 550, 551]]], [[[552, 553, 554], [564, 565, 566]], [[555, 556, 557], [567, 568, 569]], [[558, 559, 560], [570, 571, 572]], [[561, 562, 563], [573, 574, 575]]]], [[[[576, 577, 578], [588, 589, 590]], [[579, 580, 581], [591, 592, 593]], [[582, 583, 584], [594, 595, 596]], [[585, 586, 587], [597, 598, 599]]], [[[600, 601, 602], [612, 613, 614]], [[603, 604, 605], [615, 616, 617]], [[606, 607, 608], [618, 619, 620]], [[609, 610, 611], [621, 622, 623]]], [[[624, 625, 626], [636, 637, 638]], [[627, 628, 629], [639, 640, 641]], [[630, 631, 632], [642, 643, 644]], [[633, 634, 635], [645, 646, 647]]], [[[648, 649, 650], [660, 661, 662]], [[651, 652, 653], [663, 664, 665]], [[654, 655, 656], [666, 667, 668]], [[657, 658, 659], [669, 670, 671]]], [[[672, 673, 674], [684, 685, 686]], [[675, 676, 677], [687, 688, 689]], [[678, 679, 680], [690, 691, 692]], [[681, 682, 683], [693, 694, 695]]], [[[696, 697, 698], [708, 709, 710]], [[699, 700, 701], [711, 712, 713]], [[702, 703, 704], [714, 715, 716]], [[705, 706, 707], [717, 718, 719]]], [[[720, 721, 722], [732, 733, 734]], [[723, 724, 725], [735, 736, 737]], [[726, 727, 728], [738, 739, 740]], [[729, 730, 731], [741, 742, 743]]], [[[744, 745, 746], [756, 757, 758]], [[747, 748, 749], [759, 760, 761]], [[750, 751, 752], [762, 763, 764]], [[753, 754, 755], [765, 766, 767]]]], [[[[768, 769, 770], [780, 781, 782]], [[771, 772, 773], [783, 784, 785]], [[774, 775, 776], [786, 787, 788]], [[777, 778, 779], [789, 790, 791]]], [[[792, 793, 794], [804, 805, 806]], [[795, 796, 797], [807, 808, 809]], [[798, 799, 800], [810, 811, 812]], [[801, 802, 803], [813, 814, 815]]], [[[816, 817, 818], [828, 829, 830]], [[819, 820, 821], [831, 832, 833]], [[822, 823, 824], [834, 835, 836]], [[825, 826, 827], [837, 838, 839]]], [[[840, 841, 842], [852, 853, 854]], [[843, 844, 845], [855, 856, 857]], [[846, 847, 848], [858, 859, 860]], [[849, 850, 851], [861, 862, 863]]], [[[864, 865, 866], [876, 877, 878]], [[867, 868, 869], [879, 880, 881]], [[870, 871, 872], [882, 883, 884]], [[873, 874, 875], [885, 886, 887]]], [[[888, 889, 890], [900, 901, 902]], [[891, 892, 893], [903, 904, 905]], [[894, 895, 896], [906, 907, 908]], [[897, 898, 899], [909, 910, 911]]], [[[912, 913, 914], [924, 925, 926]], [[915, 916, 917], [927, 928, 929]], [[918, 919, 920], [930, 931, 932]], [[921, 922, 923], [933, 934, 935]]], [[[936, 937, 938], [948, 949, 950]], [[939, 940, 941], [951, 952, 953]], [[942, 943, 944], [954, 955, 956]], [[945, 946, 947], [957, 958, 959]]]]])
test = nn.imageSplit(i, [2, 3]) == o

if test.all():
    print('Image split test passed!')
else:
    print('Image Split test failed.')

